EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Exercice-4(Assembleur).exe -- emu8086 assembler version: 4.08  
 
[ 18/10/2024  --  09:35:38 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       DATA SEGMENT
[   2]    0000: 00 00 00 00 00 00 00 00 00 00         Vector1 DB 10 DUP(0)
[   3]    000A: 00 00 00 00 00 00 00 00 00 00         Vector2 DB 10 DUP(0)
[   4]    0014: 00 00 00 00 00 00 00 00 00 00 00 00   Result DW 10 DUP(0)
                00 00 00 00 00 00 00 00             
[   5]        :                                       DATA ENDS
[   6]        :                                       
[   7]        :                                       CODE SEGMENT
[   8]        :                                       ASSUME CS:CODE, DS:DATA
[   9]        :                                       
[  10]    0030:                                       START:
[  11]    0030: B8 00 00                              MOV AX, DATA
[  12]    0033: 8E D8                                 MOV DS, AX
[  13]        :                                       
[  14]    0035: B9 0A 00                              MOV CX, 10
[  15]    0038: BE 00 00                              LEA SI, Vector1
[  16]    003B: BF 0A 00                              LEA DI, Vector2
[  17]    003E: BB 14 00                              LEA BX, Result
[  18]        :                                       
[  19]    0041:                                       AddLoop:
[  20]    0041: 8A 04                                 MOV AL, [SI]
[  21]    0043: 02 05                                 ADD AL, [DI]
[  22]    0045: 89 07                                 MOV [BX], AX
[  23]        :                                       
[  24]    0047: 46                                    INC SI
[  25]    0048: 47                                    INC DI
[  26]    0049: 83 C3 02                              ADD BX, 2
[  27]    004C: E2 F3                                 LOOP AddLoop
[  28]        :                                       
[  29]    004E: B4 4C                                 MOV AH, 4CH
[  30]    0050: CD 21                                 INT 21H
[  31]        :                                       CODE ENDS
[  32]        :                                       END START
[  33]        :                                       
[  34]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 52      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 7E      -   check sum (l.byte)
0013: 44      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 03      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 03      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
